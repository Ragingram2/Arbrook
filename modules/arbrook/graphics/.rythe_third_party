local thirdPartyProjects =
{
    { 
        name = "glslang",
        group = "third_party",
        defines = {"ENABLE_HLSL"},
        warnings_as_errors = false,
        additional_include_dirs =
        {
            "modules/arbrook/graphics/third_party/glslang"
        },
        files =
        {
            "./**.hpp",
            "./**.cpp",
            "./**.h",
            "./**.c",
            "./SPIRV/**"
        },
        exclude_files = 
        {
            "./External/**",
            "./glslang/ExtensionHeaders/**",
            "./glslang/CInterface/**",
            "./glslang/OSDependent/Unix/**",
            "./glslang/OSDependent/Web/**",
            "./SPIRV/CInterface/**",
            "./StandAlone/**",
            "./Test/**",
            "./ndk_test/**",
            "./gtests/**"
        }
    },
    {
        name = "SPIRV-Cross",
        group = "third_party",
        warnings_as_errors = false,
        additional_include_dirs =
        {
            "modules/arbrook/graphics/third_party/SPIRV-cross/include"
        },
        files =
        {
            "./include/**",
            "./spirv_glsl.*",
            "./main.cpp"
        },
    },
    {
        name = "imgui",
        group = "third_party", 
        warnings_as_errors = false,
        dependencies = 
        {
            "public third_party/glfw"
        },
        additional_include_dirs =
        {
            "modules/arbrook/graphics/third_party/imgui"
        },
        files = 
        {
            "./*.cpp",
            "./*.h",
            "./backends/imgui_impl_dx11.cpp",
            "./backends/imgui_impl_opengl3.cpp",
            "./backends/imgui_impl_glfw.cpp"
        }
    },
    {
        name = "imguizmo",
        group = "third_party", 
        warnings_as_errors = false,
        dependencies = 
        {
            "public third_party/imgui:header-only"
        },
        additional_include_dirs =
        {
            "modules/arbrook/graphics/third_party/imguizmo"
        },
        files = 
        {
            "./*.cpp",
            "./*.h"
        }
    }
}

return thirdPartyProjects